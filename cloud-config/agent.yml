#cloud-config

write_files:
  - path: /root/join-swarm.sh
    permissions: 0755
    content: |
      #!/bin/bash
      # make sure there's no disk state that points to an existing swarm
      docker swarm leave
      # get the swarm worker token
      TOKEN=$(wget -nv -q -O - --retry-connrefused 20 --waitretry 5 http://master0:1337/join/worker)
      docker swarm join --token $TOKEN master0:2377
  - path: /root/leave-swarm.sh
    permissions: 0755
    content: |
      #!/bin/bash
      HOSTNAME=`hostname`
      # signal the master to drain services from our node
      wget -nv -q -O - --retry-connrefused 20 --waitretry 5 http://master0:1337/drain/$HOSTNAME
      docker swarm leave
  - path: /etc/systemd/system/swarm-join.service
    permissions: 0444
    content: |
      [Unit]
      Description=Join Swarm
      DefaultDependencies=no
      After=multi-user.target
      [Service]
      Type=oneshot
      ExecStart=/root/join-swarm.sh
      [Install]
      WantedBy=multi-user.target
  - path: /etc/systemd/system/swarm-leave.service
    permissions: 0444
    content: |
      [Unit]
      Description=Leave Swarm
      DefaultDependencies=no
      Before=shutdown.target reboot.target halt.target
      [Service]
      Type=oneshot
      ExecStart=/root/leave-swarm.sh
      [Install]
      WantedBy=halt.target reboot.target shutdown.target
  - path: /etc/waagent.conf
    permissions: 0444
    content: |
      ResourceDisk.Format=y
      ResourceDisk.Filesystem=ext4
      ResourceDisk.MountPoint=/mnt/resource
      ResourceDisk.EnableSwap=y
      ResourceDisk.SwapSizeMB=2048

mounts:
  - - //${STORAGE_ACCOUNT_NAME}.file.core.windows.net/${SHARE_NAME}
    - /srv
    - cifs
    - vers=3.0,username=${STORAGE_ACCOUNT_NAME},password=${STORAGE_ACCOUNT_KEY},dir_mode=0700,file_mode=0600,uid=1000,gid=1000,noperm,,iocharset=utf8
apt:
  sources:
    docker_ce.list:
      source: "deb https://download.docker.com/linux/ubuntu bionic stable"
      keyserver: p80.pool.sks-keyservers.net
      keyid: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88

# Skip upgrading the agents for quicker spin-up
#apt_update: true
#apt_upgrade: true

packages:
  - ntp
  - tmux
  - htop
  - vim
  - fail2ban
  - python-bottle
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg-agent
  - software-properties-common

# create the docker group
groups:
  - docker

# Add default auto created user to docker group
system_info:
  default_user:
    groups: [docker]

# Install Docker, for production, consider pinning to stable versions
runcmd:
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
  - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - apt-get update -y
  - apt-get install -y docker-ce docker-ce-cli containerd.io
  - sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && sudo chmod +x /usr/local/bin/docker-compose
  - systemctl enable docker
  - systemctl start docker
  - systemctl enable swarm-join
  - systemctl enable swarm-leave
  - systemctl start swarm-leave
  - systemctl start swarm-join
  #- reboot